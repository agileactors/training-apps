db.host=localhost
db.port=5432

management.server.port=8081
management.endpoint.health.show-details=always
management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*

server.servlet.context-path=/api/
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${db.host}:${db.port}/postgres?currentSchema=trainingapp
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.default_schema=trainingapp
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.javax.persistence.lock.timeout=0

spring.flyway.enabled=true
spring.flyway.schemas=trainingapp

logging.level.org.apache.coyote=info
logging.level.org.hibernate=error
logging.level.root=info

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select email, unnest(roles) as role from users where email=?
