buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}
group = "com.agileactors"
version = "1.0.0"

apply from: "gradle/build-addons/checkstyle.gradle"

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'

    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.flywaydb:flyway-mysql:9.22.3'

    implementation 'org.springframework.cloud:spring-cloud-sleuth-core:2.2.8.RELEASE'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.12.0'
}

tasks {

    springBoot {
        manifest {
            attributes 'Start-Class': 'com.agileactors.Application'
        }
        buildInfo {
            properties {
                artifact = rootProject.name
                name = "${projectTitle}"
                version
                group
            }
        }
    }

    jar {
        enabled = false
        manifest {
            attributes["Implementation-Version"] = "${project.version}"
            attributes["Implementation-Title"] = "${projectTitle}"
        }
    }
    processResources {
        from("src/main/resources") {
            exclude("**/*.sql", "**/*.yml")
        }
        duplicatesStrategy = DuplicatesStrategy.WARN
    }
    bootJar {
        duplicatesStrategy = DuplicatesStrategy.WARN
    }
}
